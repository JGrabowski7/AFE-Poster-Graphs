theme(legend.position = "none")
ggplot(num_trees_by_sp, aes(x = Species, y = density, fill = Species)) +
geom_bar(stat = "identity") +
xlab("") +
ylab("Number of species") +
ylim(0, 500) +
scale_fill_manual(values = c("ABCO" = "#4EDFC7",
"PIPO" = "#2E8B57",
"PIST" = "#89CFF0",
"PSME" = "#5D3FD3")) +
theme_minimal()+
theme(legend.position = "none")
ggplot(num_trees_by_sp, aes(x = Species, y = density, fill = Species)) +
geom_bar(stat = "identity") +
xlab("") +
ylab("Number of species") +
ylim(0, 100) +
scale_fill_manual(values = c("ABCO" = "#4EDFC7",
"PIPO" = "#2E8B57",
"PIST" = "#89CFF0",
"PSME" = "#5D3FD3")) +
theme_minimal()+
theme(legend.position = "none")
ggplot(num_trees_by_sp, aes(x = Species, y = density, fill = Species)) +
geom_bar(stat = "identity") +
xlab("") +
ylab("Number of species") +
ylim(0, 80) +
scale_fill_manual(values = c("ABCO" = "#4EDFC7",
"PIPO" = "#2E8B57",
"PIST" = "#89CFF0",
"PSME" = "#5D3FD3")) +
theme_minimal()+
theme(legend.position = "none")
ggplot(num_trees_by_sp, aes(x = Species, y = density, fill = Species)) +
geom_bar(stat = "identity") +
xlab("") +
ylab("Number of species") +
ylim(0, 100) +
scale_fill_manual(values = c("ABCO" = "#4EDFC7",
"PIPO" = "#2E8B57",
"PIST" = "#89CFF0",
"PSME" = "#5D3FD3")) +
theme_minimal()+
theme(legend.position = "none")
ggplot(num_trees_by_sp, aes(x = Species, y = density, fill = Species)) +
geom_bar(stat = "identity") +
xlab("") +
ylab("Trees per 6 hectares") +
ylim(0, 100) +
scale_fill_manual(values = c("ABCO" = "#4EDFC7",
"PIPO" = "#2E8B57",
"PIST" = "#89CFF0",
"PSME" = "#5D3FD3")) +
theme_minimal()+
theme(legend.position = "none")
ggplot(num_trees_by_sp, aes(x = Species, y = density, fill = Species)) +
geom_bar(stat = "identity") +
xlab("") +
ylab("Trees per hectares") +
ylim(0, 100) +
scale_fill_manual(values = c("ABCO" = "#4EDFC7",
"PIPO" = "#2E8B57",
"PIST" = "#89CFF0",
"PSME" = "#5D3FD3")) +
theme_minimal()+
theme(legend.position = "none")
num_trees_by_sp <- dbh_2.5 %>% group_by(Species, TreatmentStatus) %>% summarize(count=n())
num_trees_by_treatment <- dbh_2.5 %>% group_by(Species, TreatmentStatus) %>% summarize(count=n())
View(num_trees_by_treatment)
num_trees_by_treatment <- dbh_2.5 %>% group_by(Species, TreatmentStatus, PlotSize) %>% summarize(count=n())
View(num_trees_by_treatment)
num_trees_by_treatment <- dbh_2.5 %>% group_by(PlotName, PlotSize, Species, TreatmentStatus) %>% summarize(count=n())
View(num_trees_by_treatment)
num_trees_by_treatment <- dbh_2.5 %>%
group_by(Species, TreatmentStatus) %>%
summarize(count=n())
View(num_trees_by_treatment)
num_trees_by_treatment <- dbh_2.5 %>%
group_by(PlotName, PlotSize, Species, TreatmentStatus) %>%
summarize(count=n())
View(num_trees_by_treatment)
num_trees_by_treatment <- dbh_2.5 %>%
group_by(PlotSize, Species, TreatmentStatus) %>%
summarize(count=n())
View(num_trees_by_treatment)
num_trees_by_sp <- dbh_2.5 %>% group_by(Species) %>% summarize(count=n())
density <- num_trees_by_sp$count / sum(merged_summary$PlotSize)
num_trees_by_sp$density <- density
View(num_trees_by_sp)
View(num_trees_by_treatment)
View(num_trees_by_sp)
View(num_trees_by_treatment)
num_trees_by_treatment <- dbh_2.5 %>%
group_by(Species, TreatmentStatus) %>%
summarize(count=n())
View(num_trees_by_sp)
View(num_trees_by_treatment)
View(num_trees_by_sp)
treated_density <- num_trees_by_treatment$count / sum(merged_summary$PlotSize[merged_summary == "Treated"])
View(merged_summary)
treated_density <- num_trees_by_treatment$count / sum(merged_summary$PlotSize[merged_summary$TreatmentStatus == "Treated"])
treated_density <- num_trees_by_treatment$count[TreatmentStatus == "Treated" ] / sum(merged_summary$PlotSize[merged_summary$TreatmentStatus == "Treated"])
treated_density <- num_trees_by_treatment$count[num_trees_by_treatment$TreatmentStatus == "Treated" ] / sum(merged_summary$PlotSize[merged_summary$TreatmentStatus == "Treated"])
treated_density <- num_trees_by_treatment$count[num_trees_by_treatment$TreatmentStatus == "Treated" ] / sum(merged_summary$PlotSize[merged_summary$TreatmentStatus == "Treated"])
untreated_density <- num_trees_by_treatment$count[num_trees_by_treatment$TreatmentStatus == "Untreated" ] / sum(merged_summary$PlotSize[merged_summary$TreatmentStatus == "Untreated"])
density = num_trees_by_treatment$count / sum(merged_summary$PlotSize[merged_summary$TreatmentStatus])
num_trees_by_treatment <- dbh_2.5 %>%
group_by(Species, TreatmentStatus) %>%
summarize(count=n())
View(num_trees_by_treatment)
treated_density <- num_trees_by_treatment$count[num_trees_by_treatment$TreatmentStatus == "Treated"] / sum(merged_summary$PlotSize[merged_summary$TreatmentStatus == "Treated"])
treated_density <- data.frame(treated_density)
View(treated_density)
treated_density <- data.frame(treated_density, untreated_denisty)
treated_density <- data.frame(treated_density, untreated_density)
View(treated_density)
treated_density$Treatment <- treated_density$Treatment == "Treated"
TreatmentStatus <- rep("Treatment")
TreatmentStatus <- rep("Treatment", unique(num_trees_by_treatment$Species))
View(num_trees_by_treatment)
TreatmentStatus <- rep("Treatment", unique(num_trees_by_treatment$Species))
TreatmentStatus <- rep("Treatment", count(unique(num_trees_by_treatment$Species)))
TreatmentStatus <- rep("Treatment", 4)
treated_density <- data.frame(treated_density, TreatmentStatus)
View(treated_density)
treated_density <- num_trees_by_treatment$count[num_trees_by_treatment$TreatmentStatus == "Treated"] / sum(merged_summary$PlotSize[merged_summary$TreatmentStatus == "Treated"])
TreatmentStatus <- rep("Treatment", 4)
treated_density <- data.frame(treated_density, TreatmentStatus)
View(treated_density)
treated_density <- num_trees_by_treatment$count[num_trees_by_treatment$TreatmentStatus == "Treated"] / sum(merged_summary$PlotSize[merged_summary$TreatmentStatus == "Treated"])
TreatmentStatus <- rep("Treated", 4)
treated_density <- data.frame(treated_density, TreatmentStatus)
untreated_density <- num_trees_by_treatment$count[num_trees_by_treatment$TreatmentStatus == "Untreated"] / sum(merged_summary$PlotSize[merged_summary$TreatmentStatus == "Untreated"])
TreatmentStatus <- rep("Untreated", 4)
untreated_density <- data.frame(untreated_dnesity, TreatmentStatus)
treated_density <- num_trees_by_treatment$count[num_trees_by_treatment$TreatmentStatus == "Treated"] / sum(merged_summary$PlotSize[merged_summary$TreatmentStatus == "Treated"])
TreatmentStatus <- rep("Treated", 4)
treated_density <- data.frame(treated_density, TreatmentStatus)
untreated_density <- num_trees_by_treatment$count[num_trees_by_treatment$TreatmentStatus == "Untreated"] / sum(merged_summary$PlotSize[merged_summary$TreatmentStatus == "Untreated"])
TreatmentStatus <- rep("Untreated", 4)
untreated_density <- data.frame(untreated_density, TreatmentStatus)
View(treated_density)
View(untreated_density)
merged_df<- join(treated_density, untreated_density ,by="TreatmentStatys",type="full")
treated_hectares <- sum(merged_summary$PlotSize[merged_summary$TreatmentStatus])
treated_hectares <- sum(merged_summary$PlotSize[merged_summary$TreatmentStatus == "Treated"])
untreated_hectares <- sum(merged_summary$PlotSize[merged_summary$TreatmentStatus == "Untreated"])
num_trees_by_treatment <- dbh_2.5 %>%
group_by(Species, TreatmentStatus) %>%
summarize(count=n())
density <- num_trees_by_sp$count / (sum(merged_summary$PlotSize) / 2)
num_trees_by_treatment$density <- density
num_trees_by_treatment <- dbh_2.5 %>%
group_by(Species, TreatmentStatus) %>%
summarize(count=n())
density <- num_trees_by_sp$count / (sum(merged_summary$PlotSize) / 2)
density <- num_trees_by_treatement$count / (sum(merged_summary$PlotSize) / 2)
density <- num_trees_by_treatment$count / (sum(merged_summary$PlotSize) / 2)
num_trees_by_treatment$density <- density
View(num_trees_by_treatment)
ggplot(num_trees_by_treatment, aes(x = Species, y = density, fill = Species)) +
geom_bar(stat = "identity") +
xlab("") +
ylab("Number of species") +
ylim(0, 500) +
scale_fill_manual(values = c("ABCO" = "#4EDFC7",
"PIPO" = "#2E8B57",
"PIST" = "#89CFF0",
"PSME" = "#5D3FD3")) +
theme_minimal()+
theme(legend.position = "none") +
facet_wrap(~ TreatmentStatus)
ggplot(num_trees_by_treatment, aes(x = Species, y = density, fill = Species)) +
geom_bar(stat = "identity") +
xlab("") +
ylab("Trees per hectare") +
ylim(0, 200) +
scale_fill_manual(values = c("ABCO" = "#4EDFC7",
"PIPO" = "#2E8B57",
"PIST" = "#89CFF0",
"PSME" = "#5D3FD3")) +
theme_minimal()+
theme(legend.position = "none") +
facet_wrap(~ TreatmentStatus)
ggplot(dbh_2.5, aes(x= Species, fill = Species)) +
geom_bar(stat = "count") +
xlab("") +
ylab("Number of species") +
ylim(0, 500) +
scale_fill_manual(values = c("ABCO" = "#4EDFC7",
"PIPO" = "#2E8B57",
"PIST" = "#89CFF0",
"PSME" = "#5D3FD3")) +
theme_minimal()+
theme(legend.position = "none") +
facet_wrap(~ TreatmentStatus)
num_trees_by_treatment <- dbh_2.5 %>%
group_by(Species, TreatmentStatus) %>%
summarize(count=n())
density <- num_trees_by_treatment$count / (sum(merged_summary$PlotSize) / 2)
num_trees_by_treatment$density <- density
ggplot(num_trees_by_treatment, aes(x = Species, y = density, fill = Species)) +
geom_bar(stat = "identity") +
xlab("") +
ylab("Trees per hectare") +
ylim(0, 200) +
scale_fill_manual(values = c("ABCO" = "#4EDFC7",
"PIPO" = "#2E8B57",
"PIST" = "#89CFF0",
"PSME" = "#5D3FD3")) +
theme_minimal()+
theme(legend.position = "none") +
facet_wrap(~ TreatmentStatus)
num_trees_by_plot <- dbh_2.5 %>%
group_by(PlotName, PlotSize, Species, TreatmentStatus) %>%
summarize(count=n())
View(num_trees_by_plot)
View(num_trees_by_plot)
density <- num_trees_by_plot$count / num_trees_by_plot$PlotSize
ggplot(num_trees_by_plot, aes(x= Species, fill = Species)) +
geom_bar(stat = "count") +
xlab("") +
ylab("Number of species") +
ylim(0, 300) +
scale_fill_manual(values = c("ABCO" = "#4EDFC7",
"PIPO" = "#2E8B57",
"PIST" = "#89CFF0",
"PSME" = "#5D3FD3")) +
theme_minimal()+
theme(legend.position = "none") +
facet_wrap(~ TreatmentStatus + PlotName, ncol = 6)
ggplot(num_trees_by_plot, aes(x= Species, y = density, fill = Species)) +
geom_bar(stat = "count") +
xlab("") +
ylab("Number of species") +
ylim(0, 300) +
scale_fill_manual(values = c("ABCO" = "#4EDFC7",
"PIPO" = "#2E8B57",
"PIST" = "#89CFF0",
"PSME" = "#5D3FD3")) +
theme_minimal()+
theme(legend.position = "none") +
facet_wrap(~ TreatmentStatus + PlotName, ncol = 6)
ggplot(num_trees_by_plot, aes(x= Species, y = density, fill = Species)) +
geom_bar(stat = "identity") +
xlab("") +
ylab("Number of species") +
ylim(0, 300) +
scale_fill_manual(values = c("ABCO" = "#4EDFC7",
"PIPO" = "#2E8B57",
"PIST" = "#89CFF0",
"PSME" = "#5D3FD3")) +
theme_minimal()+
theme(legend.position = "none") +
facet_wrap(~ TreatmentStatus + PlotName, ncol = 6)
View(num_trees_by_plot)
ggplot(num_trees_by_plot, aes(x= Species, y = density, fill = Species)) +
geom_bar(stat = "identity") +
xlab("") +
ylab("Number of species") +
ylim(0, 1000) +
scale_fill_manual(values = c("ABCO" = "#4EDFC7",
"PIPO" = "#2E8B57",
"PIST" = "#89CFF0",
"PSME" = "#5D3FD3")) +
theme_minimal()+
theme(legend.position = "none") +
facet_wrap(~ TreatmentStatus + PlotName, ncol = 6)
density <- num_trees_by_plot$count / num_trees_by_plot$PlotSize
View(num_trees_by_plot)
num_trees_by_plot$density <- density
View(num_trees_by_plot)
ggplot(num_trees_by_plot, aes(x= Species, y = density, fill = Species)) +
geom_bar(stat = "identity") +
xlab("") +
ylab("Number of species") +
ylim(0, 700) +
scale_fill_manual(values = c("ABCO" = "#4EDFC7",
"PIPO" = "#2E8B57",
"PIST" = "#89CFF0",
"PSME" = "#5D3FD3")) +
theme_minimal()+
theme(legend.position = "none") +
facet_wrap(~ TreatmentStatus + PlotName, ncol = 6)
ggplot(dbh_2.5, aes(x= Species, fill = Species)) +
geom_bar(position = "fill", stat = "count") +
xlab("") +
ylab("Number of species") +
scale_fill_manual(values = c("ABCO" = "#4EDFC7",
"PIPO" = "#2E8B57",
"PIST" = "#89CFF0",
"PSME" = "#5D3FD3")) +
theme_minimal()+
theme(legend.position = "none")
ggplot(dbh_2.5, aes(x= Species)) +
geom_bar(position = "fill", stat = "count") +
xlab("") +
ylab("Number of species") +
scale_fill_manual(values = c("ABCO" = "#4EDFC7",
"PIPO" = "#2E8B57",
"PIST" = "#89CFF0",
"PSME" = "#5D3FD3")) +
theme_minimal()+
theme(legend.position = "none")
MOGperHectare <- est_data$MOG_count / est_data$PlotSize
est_data$MOGperha <- MOGperHectare
est_data$NotMOGperha <- est_data$TPH - est_data$MOGperha
MOGPHvsTPH<- melt(est_data[,c('PlotName','MOGperha','NotMOGperha')],id.vars = 1)
MOGPHvsTPH$variable <- factor(MOGPHvsTPH$variable, levels=c("NotMOGperha", "MOGperha"))
MOGPHvsTPH$TreatmentStatus <- est_data$TreatmentStatus
ggplot(MOGPHvsTPH, aes(x = PlotName, y = value, fill = variable)) +
geom_bar(position = "fill", stat = "identity", color = "black") +
xlab("") +
ylab("Trees per ha (%)") +
scale_fill_manual(values=c("#005b96", "#6497b1"), labels=c("All other trees", "MOG")) +
theme_classic() +
theme(legend.title = element_blank())
ggplot(dbh_2.5, aes(x= Species)) +
geom_bar(position = "fill", stat = "identity") +
xlab("") +
ylab("Number of species") +
scale_fill_manual(values = c("ABCO" = "#4EDFC7",
"PIPO" = "#2E8B57",
"PIST" = "#89CFF0",
"PSME" = "#5D3FD3")) +
theme_minimal()+
theme(legend.position = "none")
View(dbh_2.5)
View(MOGPHvsTPH)
num_trees_by_sp <- dbh_2.5 %>%
group_by(Species) %>%
summarize(count=n())
View(num_trees_by_sp)
ggplot(dbh_2.5, aes(x = Species, y = count)) +
geom_bar(position = "fill", stat = "identity") +
xlab("") +
ylab("Number of species") +
scale_fill_manual(values = c("ABCO" = "#4EDFC7",
"PIPO" = "#2E8B57",
"PIST" = "#89CFF0",
"PSME" = "#5D3FD3")) +
theme_minimal()+
theme(legend.position = "none")
ggplot(MOGPHvsTPH, aes(x = PlotName, y = value, fill = variable)) +
geom_bar(position = "fill", stat = "identity", color = "black") +
xlab("") +
ylab("Trees per ha (%)") +
scale_fill_manual(values=c("#005b96", "#6497b1"), labels=c("All other trees", "MOG")) +
theme_classic() +
theme(legend.title = element_blank())
ggplot(dbh_2.5, aes(y = count, fill = Species)) +
geom_bar(position = "fill", stat = "identity") +
xlab("") +
ylab("Number of species") +
scale_fill_manual(values = c("ABCO" = "#4EDFC7",
"PIPO" = "#2E8B57",
"PIST" = "#89CFF0",
"PSME" = "#5D3FD3")) +
theme_minimal()+
theme(legend.position = "none")
ggplot(dbh_2.5, aes(x = TreatmentStatus, y = count, fill = Species)) +
geom_bar(position = "fill", stat = "identity") +
xlab("") +
ylab("Number of species") +
scale_fill_manual(values = c("ABCO" = "#4EDFC7",
"PIPO" = "#2E8B57",
"PIST" = "#89CFF0",
"PSME" = "#5D3FD3")) +
theme_minimal()+
theme(legend.position = "none")
View(MOGPHvsTPH)
View(dbh_2.5)
test <- melt(dbh_2.5[,c('TreatmentStatus', count(dbh_2.5$Species))],id.vars = 1)
dbh_2.5$Species <- as.factor(dbh_2.5$Species)
test <- melt(dbh_2.5[,c('TreatmentStatus', count(dbh_2.5$Species))],id.vars = 1)
num_trees_by_treatment <- dbh_2.5 %>%
group_by(Species, TreatmentStatus) %>%
summarize(count=n())
View(num_trees_by_treatment)
ggplot(num_trees_by_treatment, aes(x= Species, y = count, fill = Species)) +
geom_bar(position = "fill", stat = "identity") +
xlab("") +
ylab("Number of species") +
ylim(0, 500) +
scale_fill_manual(values = c("ABCO" = "#4EDFC7",
"PIPO" = "#2E8B57",
"PIST" = "#89CFF0",
"PSME" = "#5D3FD3")) +
theme_minimal()+
theme(legend.position = "none") +
facet_wrap(~ TreatmentStatus)
ggplot(num_trees_by_treatment, aes(x = TreatmentStatus, y = count, fill = Species)) +
geom_bar(position = "fill", stat = "identity") +
xlab("") +
ylab("Number of species") +
ylim(0, 500) +
scale_fill_manual(values = c("ABCO" = "#4EDFC7",
"PIPO" = "#2E8B57",
"PIST" = "#89CFF0",
"PSME" = "#5D3FD3")) +
theme_minimal()+
theme(legend.position = "none")
ggplot(num_trees_by_treatment, aes(x = TreatmentStatus, y = count, fill = Species)) +
geom_bar(position = "fill", stat = "identity") +
xlab("") +
ylab("Number of species") +
scale_fill_manual(values = c("ABCO" = "#4EDFC7",
"PIPO" = "#2E8B57",
"PIST" = "#89CFF0",
"PSME" = "#5D3FD3")) +
theme_minimal()+
theme(legend.position = "none")
num_trees_by_plot <- dbh_2.5 %>%
group_by(PlotName, PlotSize, Species, TreatmentStatus) %>%
summarize(count=n())
View(num_trees_by_plot)
ggplot(num_trees_by_plot, aes(x = PlotName, y = count, fill = Species)) +
geom_bar(position = "fill", stat = "identity") +
xlab("") +
ylab("Number of species") +
scale_fill_manual(values = c("ABCO" = "#4EDFC7",
"PIPO" = "#2E8B57",
"PIST" = "#89CFF0",
"PSME" = "#5D3FD3")) +
theme_minimal()+
theme(legend.position = "none") +
facet_wrap(~ TreatmentStatus)
ggplot(num_trees_by_plot, aes(x = PlotName, y = count, fill = Species)) +
geom_bar(position = "fill", stat = "identity") +
xlab("") +
ylab("Number of species") +
scale_fill_manual(values = c("ABCO" = "#4EDFC7",
"PIPO" = "#2E8B57",
"PIST" = "#89CFF0",
"PSME" = "#5D3FD3")) +
theme_minimal()+
theme(legend.position = "none") +
facet_wrap(~ TreatmentStatus, ncol = 6)
ggplot(num_trees_by_plot, aes(x = Treatment, y = count, fill = Species)) +
geom_bar(position = "fill", stat = "identity") +
xlab("") +
ylab("Number of species") +
scale_fill_manual(values = c("ABCO" = "#4EDFC7",
"PIPO" = "#2E8B57",
"PIST" = "#89CFF0",
"PSME" = "#5D3FD3")) +
theme_minimal()+
theme(legend.position = "none") +
facet_wrap(~ PlotName, ncol = 6)
ggplot(num_trees_by_plot, aes(x = TreatmentStatus, y = count, fill = Species)) +
geom_bar(position = "fill", stat = "identity") +
xlab("") +
ylab("Number of species") +
scale_fill_manual(values = c("ABCO" = "#4EDFC7",
"PIPO" = "#2E8B57",
"PIST" = "#89CFF0",
"PSME" = "#5D3FD3")) +
theme_minimal()+
theme(legend.position = "none") +
facet_wrap(~ PlotName, ncol = 6)
num_trees_by_plot <- dbh_2.5 %>%
group_by(PlotName, PlotSize, Species, TreatmentStatus) %>%
summarize(count=n())
View(num_trees_by_plot)
TreatedPlotTrees <- subset(num_trees_by_plot, TreatmentStatus == "Treated")$count
TreatedPlotTrees <- fliter(num_trees_by_plot, TreatmentStatus == "Treated")
TreatedPlotTrees <- filter(num_trees_by_plot, TreatmentStatus == "Treated")
View(TreatedPlotTrees)
ggplot(num_trees_by_plot, aes(x = TreatmentStatus, y = count, fill = Species)) +
geom_bar(position = "fill", stat = "identity") +
xlab("") +
ylab("Number of species") +
scale_fill_manual(values = c("ABCO" = "#4EDFC7",
"PIPO" = "#2E8B57",
"PIST" = "#89CFF0",
"PSME" = "#5D3FD3")) +
theme_minimal()+
theme(legend.position = "none") +
facet_wrap(~ PlotName, ncol = 6)
ggplot(TreatedPlotTrees, aes(x = TreatmentStatus, y = count, fill = Species)) +
geom_bar(position = "fill", stat = "identity") +
xlab("") +
ylab("Number of species") +
scale_fill_manual(values = c("ABCO" = "#4EDFC7",
"PIPO" = "#2E8B57",
"PIST" = "#89CFF0",
"PSME" = "#5D3FD3")) +
theme_minimal()+
theme(legend.position = "none") +
facet_wrap(~ PlotName, ncol = 6)
UntreatedPlotTrees <- filter(num_trees_by_plot, TreatmentStatus == "Untreated")
ggplot(TreatedPlotTrees, aes(x = PlotName, y = count, fill = Species)) +
geom_bar(position = "fill", stat = "identity") +
xlab("") +
ylab("Number of species") +
scale_fill_manual(values = c("ABCO" = "#4EDFC7",
"PIPO" = "#2E8B57",
"PIST" = "#89CFF0",
"PSME" = "#5D3FD3")) +
theme_minimal()+
theme(legend.position = "none")
ggplot(UntreatedPlotTrees, aes(x = PlotName, y = count, fill = Species)) +
geom_bar(position = "fill", stat = "identity") +
xlab("") +
ylab("Number of species") +
scale_fill_manual(values = c("ABCO" = "#4EDFC7",
"PIPO" = "#2E8B57",
"PIST" = "#89CFF0",
"PSME" = "#5D3FD3")) +
theme_minimal()+
theme(legend.position = "none")
