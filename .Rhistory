theme_classic() +
theme(legend.title = element_blank())
ggplot(MOGPHvsTPH, aes(x = PlotName, y = value, fill = variable)) +
geom_bar(position = 'stack', stat = "identity") +
xlab("Plot") +
ylab("Number of trees") +
ylim(0, 1500) +
scale_fill_manual(values=c("yellow", "blue"), labels = c('Mature Old Growth', 'Old Growth')) +
theme_classic() +
theme(legend.title = element_blank())
View(MOGPHvsTPH)
ggplot(MOGPHvsTPH, aes(x = PlotName, y = value, fill = variable)) +
geom_bar(position = 'stack', stat = "identity") +
xlab("Plot") +
ylab("Number of trees") +
ylim(0, 1750) +
scale_fill_manual(values=c("yellow", "blue"), labels = c('Mature Old Growth', 'Old Growth')) +
theme_classic() +
theme(legend.title = element_blank())
ggplot(MOGPHvsTPH, aes(x = PlotName, y = value, fill = variable)) +
geom_bar(position = 'stack', stat = "identity") +
xlab("Plot") +
ylab("Number of trees") +
ylim(0, 2000) +
scale_fill_manual(values=c("yellow", "blue"), labels = c('Mature Old Growth', 'Old Growth')) +
theme_classic() +
theme(legend.title = element_blank())
ggplot(MOGPHvsTPH, aes(x = PlotName, y = value, fill = variable)) +
geom_bar(position = 'stack', stat = "identity") +
xlab("Plot") +
ylab("Number of trees") +
ylim(0, 2000) +
scale_fill_manual(values=c("yellow", "blue"), labels = c('MOG per ha', 'Trees per ha')) +
theme_classic() +
theme(legend.title = element_blank())
ggplot(MOGPHvsTPH, aes(x = PlotName, y = value, fill = variable)) +
geom_bar(position = 'stack', stat = "identity") +
xlab("Plot") +
ylab("Trees per ha") +
ylim(0, 2000) +
scale_fill_manual(values=c("yellow", "blue"), labels = c('MOG', 'All trees')) +
theme_classic() +
theme(legend.title = element_blank())
library(tidyverse)
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(reshape2)
library(readxl)
library(dplyr)
library(gridExtra)
SFS4 <- read_excel("sfs4 bible 2024.xlsx")
BTN4 <- read_excel("btn4 revisit 2024.xlsx")
BTN4dbh <- read_excel("btn4 access for C.xlsx")
SFF1 <- read_excel("sff1 establishment 2024.xlsx")
SFF2 <- read_excel("sff2 establishment 2024.xlsx")
SFF3 <- read_excel("sff3 establishment 2024.xlsx")
SFF4 <- read_excel("sff4 establishment 2024.xlsx")
SFF5 <- read_excel("sff5 establishment 2024.xlsx")
SFF6 <- read_excel("sff6 establishment 2024.xlsx")
SFF7 <- read_excel("sff7 establishment 2024.xlsx")
SFF8 <- read_excel("sff8 establishment 2024.xlsx")
SFF9 <- read_excel("sff9 establishment 2024.xlsx")
SFF10 <- read_excel("sff10 establishment 2024.xlsx")
#Add plot numbers to treeIDs
SFS4$Tree_num = paste0('SFS4-', SFS4$Tree_num)
BTN4$Tree_num = paste0('BTN4-', BTN4$Tree_num)
SFF1$Tree_num = paste0('SFF1-', SFF1$Tree_num)
SFF2$Tree_num = paste0('SFF2-', SFF2$Tree_num)
SFF3$Tree_num = paste0('SFF3-', SFF3$Tree_num)
SFF4$Tree_num = paste0('SFF4-', SFF4$Tree_num)
SFF5$Tree_num = paste0('SFF5-', SFF5$Tree_num)
SFF6$Tree_num = paste0('SFF6-', SFF6$Tree_num)
SFF7$Tree_num = paste0('SFF7-', SFF7$Tree_num)
SFF8$Tree_num = paste0('SFF8-', SFF8$Tree_num)
SFF9$Tree_num = paste0('SFF9-', SFF9$Tree_num)
SFF10$Tree_num = paste0('SFF10-', SFF10$Tree_num)
# join of BTN4 DBH & Species files
BTN4dbh$Tree_num <- BTN4dbh$TreeID
BTN4 <- left_join(BTN4, BTN4dbh, by = "Tree_num")
BTN4$Species <- BTN4$SpeciesID
BTN4$Notes<-BTN4$Notes.x
#Add plot number to data
SFS4$PlotName <- "SFS4"
BTN4$PlotName <- "BTN4"
SFF1$PlotName <- "SFF1"
SFF2$PlotName <- "SFF2"
SFF3$PlotName <- "SFF3"
SFF4$PlotName <- "SFF4"
SFF5$PlotName <- "SFF5"
SFF6$PlotName <- "SFF6"
SFF7$PlotName <- "SFF7"
SFF8$PlotName <- "SFF8"
SFF9$PlotName <- "SFF9"
SFF10$PlotName <- "SFF10"
#Add treatment status
SFS4$TreatmentStatus <- "Treated"
BTN4$TreatmentStatus <- "Untreated"
SFF1$TreatmentStatus <- "Treated"
SFF2$TreatmentStatus <- "Untreated"
SFF3$TreatmentStatus <- "Untreated"
SFF4$TreatmentStatus <- "Untreated"
SFF5$TreatmentStatus <- "Treated"
SFF6$TreatmentStatus <- "Untreated"
SFF7$TreatmentStatus <- "Treated"
SFF8$TreatmentStatus <- "Treated"
SFF9$TreatmentStatus <- "Untreated"
SFF10$TreatmentStatus <- "Treated"
# Add plot size
SFS4$PlotSize <- 1
BTN4$PlotSize <- 1
SFF1$PlotSize <- 0.25
SFF2$PlotSize <- 1
SFF3$PlotSize <- 0.25
SFF4$PlotSize <- 0.25
SFF5$PlotSize <- 0.25
SFF6$PlotSize <- 0.25
SFF7$PlotSize <- 0.25
SFF8$PlotSize <- 1
SFF9$PlotSize <- 0.25
SFF10$PlotSize <- 0.25
#Select columns of interest (make loop at some point)
SFS4 <- SFS4 %>%
select(PlotName, PlotSize, TreatmentStatus, Tree_num, Species, Condition, DBH, OG, Notes)
BTN4 <- BTN4 %>%
select(PlotName, PlotSize, TreatmentStatus, Tree_num, Species, Condition, DBH, OG, Notes)
SFF1 <- SFF1 %>%
select(PlotName, PlotSize, TreatmentStatus, Tree_num, Species, Condition, DBH, OG, Notes)
SFF2 <- SFF2 %>%
select(PlotName, PlotSize, TreatmentStatus, Tree_num, Species, Condition, DBH, OG, Notes)
SFF3 <- SFF3 %>%
select(PlotName, PlotSize, TreatmentStatus, Tree_num, Species, Condition, DBH, OG, Notes)
SFF4 <- SFF4 %>%
select(PlotName, PlotSize, TreatmentStatus, Tree_num, Species, Condition, DBH, OG, Notes)
SFF5 <- SFF5 %>%
select(PlotName, PlotSize, TreatmentStatus, Tree_num, Species, Condition, DBH, OG,  Notes)
SFF6 <- SFF6 %>%
select(PlotName, PlotSize, TreatmentStatus, Tree_num, Species, Condition, DBH, OG, Notes)
SFF7 <- SFF7 %>%
select(PlotName, PlotSize, TreatmentStatus, Tree_num, Species, Condition, DBH, OG, Notes)
SFF8 <- SFF8 %>%
select(PlotName, PlotSize, TreatmentStatus, Tree_num, Species, Condition, DBH, OG, Notes)
SFF9 <- SFF9 %>%
select(PlotName, PlotSize, TreatmentStatus, Tree_num, Species, Condition, DBH, OG,  Notes)
SFF10 <- SFF10 %>%
select(PlotName, PlotSize, TreatmentStatus, Tree_num, Species, Condition, DBH, OG, Notes)
# merge all the plots into one dataframe
SFS4$Condition <- as.numeric(SFS4$Condition)
merged_plots <- bind_rows(SFS4, BTN4, SFF1, SFF2, SFF3, SFF4, SFF5, SFF6, SFF7, SFF8, SFF9, SFF10)
# add a column to define MOG as Y or NA
merged_plots <- merged_plots %>%
mutate(MOG = case_when(OG == "Y" | DBH > 30 ~ "Y"))
# calculate tree counts
merged_summary <- merged_plots %>%
group_by(PlotName, PlotSize, TreatmentStatus) %>%
summarize(Tree_count = n(), meanDBH = mean(DBH, na.rm = TRUE))
# calculate MOG stats
merged_MOG <- merged_plots %>%
filter(MOG == "Y")%>%
group_by(PlotName, PlotSize, TreatmentStatus)%>%
summarize(MOG_count = n())
#calculate live MOG stats
merged_MOG_live <- merged_plots %>%
filter(MOG == "Y" & Condition != 5 & Condition != 2) %>%
group_by(PlotName, PlotSize, TreatmentStatus) %>%
summarize(MOG_live_count = n())
#calculate OG stats
merged_OG <- merged_plots %>%
filter(OG == "Y") %>%
group_by(PlotName, PlotSize, TreatmentStatus) %>%
summarize(OG_count = n())
# merge them all together
merged_summary$MOG_count <- merged_MOG$MOG_count
merged_summary$MOG_live_count <- merged_MOG_live$MOG_live_count
merged_summary$OG_count <- merged_OG$OG_count
# calculate TPH
merged_summary$TPH <- merged_summary$Tree_count/merged_summary$PlotSize
est_data<-merged_summary
# Add tree colors
add_tree_colors <- function(df){
df <- df%>%
mutate(colors=
case_when(Species == "ABCO" ~ "#4EDFC7",
Species == "ACGL" ~ "#C21E56",
Species == "JUMO" ~ "#FFC0CB",
Species == "JUSC" ~ "#95658B",
Species == "PIED" ~ "#FFD700",
Species == "PIPO" ~ "#2E8B57",
Species == "PIST" ~ "#89CFF0",
Species == "PRVI" ~ "#9F2B68",
Species == "PSME" ~ "#808080",
Species == "QUGA" ~ "#5D3FD3",
Species == "QUUN" ~ "#CC5500",
Species == "SASC" ~ "#E3963E",
Species == "unknown" ~ "#AFE1AF",
Species == "NA" ~ "#808080"
))
}
merged_plots <- add_tree_colors(merged_plots)
# some treatment level stats
treatment_summary <- merged_summary %>%
group_by(TreatmentStatus)%>%
summarize(Tree_count = sum(Tree_count), MOG_count = sum(MOG_count), MOG_live_count = sum(MOG_live_count), Surveyed_ha = sum(PlotSize))
View(merged_summary)
View(SFF1)
library(ggplot2)
library(reshape2)
library(readxl)
library(dplyr)
library(gridExtra)
library(tidyverse)
library(data.table)
library(car)
library(glmmTMB)
tree_data <- read.csv("data/all_trees_2024.csv")
tree_data$Plot <- str_extract(tree_data$TreeID, "[^-]+")
tree_data <- tree_data %>%
mutate(TreatmentStatus = (case_when(Plot == "SFS4" ~ "Treated",
Plot == "BTN4" ~ "Untreated",
Plot == "SFF1" ~ "Treated",
Plot == "SFF2" ~ "Untreated",
Plot == "SFF3" ~ "Untreated",
Plot == "SFF4" ~ "Untreated",
Plot == "SFF5" ~ "Treated",
Plot == "SFF6" ~ "Untreated",
Plot == "SFF7" ~ "Treated",
Plot == "SFF8" ~ "Treated",
Plot == "SFF9" ~ "Untreated",
Plot == "SFF10" ~ "Treated",
)))
tree_data <- tree_data %>%
mutate(PlotSize = (case_when(Plot == "SFS4" ~ 1,
Plot == "BTN4" ~ 1,
Plot == "SFF1" ~ 0.25,
Plot == "SFF2" ~ 1,
Plot == "SFF3" ~ 0.25,
Plot == "SFF4" ~ 0.25,
Plot == "SFF5" ~ 0.25,
Plot == "SFF6" ~ 0.25,
Plot == "SFF7" ~ 0.25,
Plot == "SFF8" ~ 1,
Plot == "SFF9" ~ 0.25,
Plot == "SFF10" ~ 0.25,
)))
tree_data <- tree_data %>%
mutate(PlotSize = (case_when(Plot == "SFS4" ~ 1,
Plot == "BTN4" ~ 1,
Plot == "SFF1" ~ 0.25,
Plot == "SFF2" ~ 1,
Plot == "SFF3" ~ 0.25,
Plot == "SFF4" ~ 0.25,
Plot == "SFF5" ~ 0.25,
Plot == "SFF6" ~ 0.25,
Plot == "SFF7" ~ 0.25,
Plot == "SFF8" ~ 1,
Plot == "SFF9" ~ 0.25,
Plot == "SFF10" ~ 0.25,
)))
tree_data <- read.csv("data/all_trees_2024.csv")
setwd("S:/Ecology/Student_folders_&_files/Jonathan 2024/AFE-Poster-Graphs")
tree_data <- read.csv("data/all_trees_2024.csv")
tree_data$Plot <- str_extract(tree_data$TreeID, "[^-]+")
tree_data <- tree_data %>%
mutate(TreatmentStatus = (case_when(Plot == "SFS4" ~ "Treated",
Plot == "BTN4" ~ "Untreated",
Plot == "SFF1" ~ "Treated",
Plot == "SFF2" ~ "Untreated",
Plot == "SFF3" ~ "Untreated",
Plot == "SFF4" ~ "Untreated",
Plot == "SFF5" ~ "Treated",
Plot == "SFF6" ~ "Untreated",
Plot == "SFF7" ~ "Treated",
Plot == "SFF8" ~ "Treated",
Plot == "SFF9" ~ "Untreated",
Plot == "SFF10" ~ "Treated",
)))
tree_data <- tree_data %>%
mutate(PlotSize = (case_when(Plot == "SFS4" ~ 1,
Plot == "BTN4" ~ 1,
Plot == "SFF1" ~ 0.25,
Plot == "SFF2" ~ 1,
Plot == "SFF3" ~ 0.25,
Plot == "SFF4" ~ 0.25,
Plot == "SFF5" ~ 0.25,
Plot == "SFF6" ~ 0.25,
Plot == "SFF7" ~ 0.25,
Plot == "SFF8" ~ 1,
Plot == "SFF9" ~ 0.25,
Plot == "SFF10" ~ 0.25,
)))
tree_data <- tree_data %>%
mutate(PlotSize = (case_when(Plot == "SFS4" ~ 1,
Plot == "BTN4" ~ 1,
Plot == "SFF1" ~ 0.25,
Plot == "SFF2" ~ 1,
Plot == "SFF3" ~ 0.25,
Plot == "SFF4" ~ 0.25,
Plot == "SFF5" ~ 0.25,
Plot == "SFF6" ~ 0.25,
Plot == "SFF7" ~ 0.25,
Plot == "SFF8" ~ 1,
Plot == "SFF9" ~ 0.25,
Plot == "SFF10" ~ 0.25,
)))
tree_data <- tree_data %>%
mutate(PlotSize = (case_when(Plot == "SFS4" ~ 1,
Plot == "BTN4" ~ 1,
Plot == "SFF1" ~ 0.25,
Plot == "SFF2" ~ 1,
Plot == "SFF3" ~ 0.25,
Plot == "SFF4" ~ 0.25,
Plot == "SFF5" ~ 0.25,
Plot == "SFF6" ~ 0.25,
Plot == "SFF7" ~ 0.25,
Plot == "SFF8" ~ 1,
Plot == "SFF9" ~ 0.25,
Plot == "SFF10" ~ 0.25,
)))
--------------------------------------------------------------------------------
## filter data to make dbh cutoff 2.5
dbh_2.5 <- filter(tree_data, Diameter < 2.5 & SpeciesID %in% c("PIPO", "PIST", "PSME", "ABCO"))
tree_data <- tree_data %>%
mutate(PlotSize = (case_when(Plot == "SFS4" ~ 1,
Plot == "BTN4" ~ 1,
Plot == "SFF1" ~ 0.25,
Plot == "SFF2" ~ 1,
Plot == "SFF3" ~ 0.25,
Plot == "SFF4" ~ 0.25,
Plot == "SFF5" ~ 0.25,
Plot == "SFF6" ~ 0.25,
Plot == "SFF7" ~ 0.25,
Plot == "SFF8" ~ 1,
Plot == "SFF9" ~ 0.25,
Plot == "SFF10" ~ 0.25,
)))
--------------------------------------------------------------------------------
## filter data to make dbh cutoff 2.5
dbh_2.5 <- filter(tree_data, Diameter < 2.5 & SpeciesID %in% c("PIPO", "PIST", "PSME", "ABCO"))
dbh_2.5_table <- dbh_2.5 %>%
group_by(TreatmentStatus, SpeciesID) %>%
summarise(count = n()) %>%
spread(key = TreatmentStatus, value = count, fill = 0)
tree_data <- tree_data %>%
mutate(PlotSize = (case_when(Plot == "SFS4" ~ 1,
Plot == "BTN4" ~ 1,
Plot == "SFF1" ~ 0.25,
Plot == "SFF2" ~ 1,
Plot == "SFF3" ~ 0.25,
Plot == "SFF4" ~ 0.25,
Plot == "SFF5" ~ 0.25,
Plot == "SFF6" ~ 0.25,
Plot == "SFF7" ~ 0.25,
Plot == "SFF8" ~ 1,
Plot == "SFF9" ~ 0.25,
Plot == "SFF10" ~ 0.25,
)))
tree_data <- tree_data %>%
mutate(PlotSize = (case_when(Plot == "SFS4" ~ 1,
Plot == "BTN4" ~ 1,
Plot == "SFF1" ~ 0.25,
Plot == "SFF2" ~ 1,
Plot == "SFF3" ~ 0.25,
Plot == "SFF4" ~ 0.25,
Plot == "SFF5" ~ 0.25,
Plot == "SFF6" ~ 0.25,
Plot == "SFF7" ~ 0.25,
Plot == "SFF8" ~ 1,
Plot == "SFF9" ~ 0.25,
Plot == "SFF10" ~ 0.25,
)))
dbh_2.5 <- filter(tree_data, Diameter < 2.5 & SpeciesID %in% c("PIPO", "PIST", "PSME", "ABCO"))
dbh_2.5_table <- dbh_2.5 %>%
group_by(TreatmentStatus, SpeciesID) %>%
summarise(count = n()) %>%
spread(key = TreatmentStatus, value = count, fill = 0)
ggplot(dbh_2.5, aes(x=Diameter)) +
geom_histogram() +
facet_wrap(~ TreatmentStatus)
ggplot(dbh_2.5, aes(x=Diameter)) +
geom_histogram() +
facet_wrap(~ TreatmentStatus) +
theme_bw()
t_num_trees <- filter(dbh_2.5, TreatmentStatus == "Treated")
t_num_trees <- t_num_trees %>%
group_by(Plot, PlotSize, TreatmentStatus, SpeciesID) %>%
summarize(count=n())
t_num_trees <- t_num_trees %>%
mutate(count = ifelse(PlotSize == 0.25, count * 4, count))
t_table <- data.frame(matrix(nrow = 0, ncol = 3))
for (site in unique(t_num_trees$Plot)) {
row_temp = data.frame(matrix(nrow = 1, ncol = 3))
row_temp[1,1] = site
row_temp[1,2] = "Treated"
row_temp[1,3] = sum(t_num_trees$count[t_num_trees$Plot == site])
t_table = rbind(t_table, row_temp)
}
u_num_trees <- filter(dbh_2.5, TreatmentStatus == "Untreated")
u_num_trees <- u_num_trees %>%
group_by(Plot, PlotSize, TreatmentStatus, SpeciesID) %>%
summarize(count=n())
u_num_trees <- u_num_trees %>%
mutate(count = ifelse(PlotSize == 0.25, count * 4, count))
u_table <- data.frame(matrix(nrow = 0, ncol = 3))
for (site in unique(u_num_trees$Plot)) {
row_temp = data.frame(matrix(nrow = 1, ncol = 3))
row_temp[1,1] = site
row_temp[1,2] = "Untreated"
row_temp[1,3] = sum(u_num_trees$count[u_num_trees$Plot == site])
u_table = rbind(u_table, row_temp)
}
list <- list(t_table, u_table)
avg_tree_num <- list %>% reduce(full_join, by = c("X1", "X2", "X3"))
ggplot(avg_tree_num, aes(x = X2, y = X3, fill = X2), alpha = 0.5) +
geom_boxplot() +
xlab("") +
ylab("Density (trees per hectare)") +
ylim(0, 1000) +
theme_minimal() +
theme(legend.position = "none")
ggplot(avg_tree_num, aes(x = X2, y = X3, fill = X2), alpha = 0.5) +
geom_boxplot() +
xlab("") +
ylab("Density (trees per hectare)") +
ylim(0, 1000) +
theme_bw() +
theme(legend.position = "none")
tree_data <- tree_data %>%
mutate(MOG = case_when(Old_growth == "Y" | Diameter > 30 ~ "Y"))
all_live_MOG <- tree_data %>%
filter(MOG == "Y" & Tree_condition %in% c(0,1,3,4,7,8,9,10,11)) %>%
group_by(TreatmentStatus) %>%
summarize(MOG_live_count = n())
live_MOG <- tree_data %>%
filter(MOG == "Y" & Tree_condition %in% c(1,3,7) & SpeciesID %in%
c("PIPO", "ABCO", "PIST", "PSME")) %>%
group_by(TreatmentStatus, SpeciesID) %>%
summarize(MOG_live_count = n())
ggplot(live_MOG, aes(x = SpeciesID, y = MOG_live_count, fill = SpeciesID)) +
geom_bar(stat = "identity") +
xlab("") +
ylab("Number of live MOG") +
ylim(0, 1000) +
scale_fill_manual(values = c("ABCO" = "#4EDFC7",
"PIPO" = "#2E8B57",
"PIST" = "#89CFF0",
"PSME" = "#5D3FD3")) +
theme_minimal() +
facet_wrap(~ TreatmentStatus) +
theme(legend.position = "none")
ggplot(live_MOG, aes(x = SpeciesID, y = MOG_live_count, fill = SpeciesID)) +
geom_bar(stat = "identity") +
xlab("") +
ylab("Number of live MOG") +
ylim(0, 1000) +
scale_fill_manual(values = c("ABCO" = "#4EDFC7",
"PIPO" = "#2E8B57",
"PIST" = "#89CFF0",
"PSME" = "#5D3FD3")) +
theme_bw() +
facet_wrap(~ TreatmentStatus) +
theme(legend.position = "none")
tree_data <- tree_data %>%
mutate(MOG = case_when(Old_growth == "Y" | Diameter > 30 ~ "Y"))
live_MOG <- tree_data %>%
filter(MOG == "Y" & Tree_condition %in% c(1,3,7) & SpeciesID %in%
c("PIPO", "ABCO", "PIST", "PSME")) %>%
group_by(TreatmentStatus, SpeciesID) %>%
summarize(MOG_live_count = n())
ggplot(live_MOG, aes(x = SpeciesID, y = MOG_live_count, fill = SpeciesID)) +
geom_bar(stat = "identity") +
xlab("") +
ylab("Number of live MOG") +
ylim(0, 1000) +
scale_fill_manual(values = c("ABCO" = "#4EDFC7", "PIPO" = "#2E8B57",
"PIST" = "#89CFF0", "PSME" = "#5D3FD3")) +
theme_bw() +
facet_wrap(~ TreatmentStatus) +
theme(legend.position = "none")
small_trees <- filter(tree_data, Diameter < 2.5 & SpeciesID %in%
c("PIPO", "PIST", "PSME", "ABCO", "QUGA"))
num_trees_by_treatment <- small_trees %>%
group_by(SpeciesID, TreatmentStatus) %>%
summarize(count=n())
View(num_trees_by_treatment)
ggplot(num_trees_by_treatment, aes(x = TreatmentStatus, y = count, fill = SpeciesID)) +
geom_bar(position = "fill", stat = "identity") +
xlab("") +
ylab("Species composition") +
scale_fill_manual(values = c("ABCO" = "#4EDFC7", "PIPO" = "#2E8B57",
"PIST" = "#89CFF0", "PSME" = "#5D3FD3",
"QUGA" = "#CC5500")) +
theme_bw()
ggplot(num_trees_by_treatment, aes(x = TreatmentStatus, y = count, fill = SpeciesID)) +
geom_bar(position = "fill", stat = "identity") +
xlab("") +
ylab("Species composition") +
scale_fill_manual(values = c("ABCO" = "#4EDFC7", "PIPO" = "#2E8B57",
"PIST" = "#89CFF0", "PSME" = "#5D3FD3",
"QUGA" = "#CC5500")) +
theme_bw()
small_trees <- filter(tree_data, Diameter < 2.5 & SpeciesID %in%
c("PIPO", "PIST", "PSME", "ABCO"))
num_trees_by_treatment <- small_trees %>%
group_by(SpeciesID, TreatmentStatus) %>%
summarize(count=n())
ggplot(num_trees_by_treatment, aes(x = TreatmentStatus, y = count, fill = SpeciesID)) +
geom_bar(position = "fill", stat = "identity") +
xlab("") +
ylab("Species composition") +
scale_fill_manual(values = c("ABCO" = "#4EDFC7", "PIPO" = "#2E8B57",
"PIST" = "#89CFF0", "PSME" = "#5D3FD3")) +
theme_bw()
